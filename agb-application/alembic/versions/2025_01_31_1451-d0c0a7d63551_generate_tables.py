"""GENERATE TABLES

Revision ID: d0c0a7d63551
Revises: 
Create Date: 2025-01-31 14:51:17.885600

"""

from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = "d0c0a7d63551"
down_revision: Union[str, None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table(
        "according_to_the_drawings",
        sa.Column("name", sa.String(length=50), nullable=True),
        sa.Column("number_in_catalog", sa.String(length=50), nullable=True),
        sa.Column(
            "number_in_catalog_agb", sa.String(length=50), nullable=True
        ),
        sa.Column("name_in_KD", sa.String(length=50), nullable=True),
        sa.Column("name_in_catalog", sa.String(length=50), nullable=True),
        sa.Column("first_applicability", sa.String(length=50), nullable=True),
        sa.Column("note", sa.String(length=50), nullable=True),
        sa.Column("developed", sa.String(length=50), nullable=False),
        sa.Column("KD", sa.String(length=50), nullable=True),
        sa.Column("date", sa.String(length=50), nullable=True),
        sa.Column("marked_for_deletion", sa.Boolean(), nullable=True),
        sa.Column("id", sa.Integer(), nullable=False),
        sa.PrimaryKeyConstraint(
            "id", name=op.f("pk_according_to_the_drawings")
        ),
        sa.UniqueConstraint(
            "number_in_catalog",
            name=op.f("uq_according_to_the_drawings_number_in_catalog"),
        ),
        sa.UniqueConstraint(
            "number_in_catalog_agb",
            name=op.f("uq_according_to_the_drawings_number_in_catalog_agb"),
        ),
    )
    op.create_table(
        "adapters_and_plugss",
        sa.Column("number_in_catalog", sa.String(length=50), nullable=True),
        sa.Column(
            "number_in_catalog_agb", sa.String(length=50), nullable=True
        ),
        sa.Column("name_in_catalog", sa.String(length=50), nullable=True),
        sa.Column("name_in_KD", sa.String(length=50), nullable=True),
        sa.Column("name_in_catalog_agb", sa.String(length=50), nullable=True),
        sa.Column("adapter_type", sa.String(length=50), nullable=True),
        sa.Column("adapter_angle", sa.String(length=50), nullable=True),
        sa.Column("exit_first", sa.String(length=50), nullable=True),
        sa.Column("exit_second", sa.String(length=50), nullable=True),
        sa.Column("center_exit", sa.String(length=50), nullable=True),
        sa.Column("name_in_OEM", sa.String(length=50), nullable=True),
        sa.Column("assigned", sa.String(length=50), nullable=False),
        sa.Column("note", sa.String(length=50), nullable=True),
        sa.Column("applicability", sa.String(length=50), nullable=True),
        sa.Column("date", sa.String(length=50), nullable=True),
        sa.Column("marked_for_deletion", sa.Boolean(), nullable=True),
        sa.Column("id", sa.Integer(), nullable=False),
        sa.PrimaryKeyConstraint("id", name=op.f("pk_adapters_and_plugss")),
        sa.UniqueConstraint(
            "number_in_catalog",
            name=op.f("uq_adapters_and_plugss_number_in_catalog"),
        ),
        sa.UniqueConstraint(
            "number_in_catalog_agb",
            name=op.f("uq_adapters_and_plugss_number_in_catalog_agb"),
        ),
    )
    op.create_table(
        "metizs",
        sa.Column("number_in_catalog", sa.String(length=50), nullable=True),
        sa.Column(
            "number_in_catalog_agb", sa.String(length=50), nullable=True
        ),
        sa.Column("name_in_catalog", sa.String(length=50), nullable=True),
        sa.Column("name_in_KD", sa.String(length=50), nullable=True),
        sa.Column("name_in_catalog_agb", sa.String(length=50), nullable=True),
        sa.Column("standard", sa.String(length=50), nullable=True),
        sa.Column("hardware_type", sa.String(length=50), nullable=True),
        sa.Column("thread_profile", sa.String(length=50), nullable=True),
        sa.Column("nominal_diameter", sa.String(length=50), nullable=True),
        sa.Column("thread_pitch", sa.String(length=50), nullable=True),
        sa.Column("length", sa.String(length=50), nullable=True),
        sa.Column("strength_class", sa.String(length=50), nullable=True),
        sa.Column("Material_or_coating", sa.String(length=50), nullable=True),
        sa.Column("assigned", sa.String(length=50), nullable=False),
        sa.Column("note", sa.String(length=50), nullable=True),
        sa.Column("applicability", sa.String(length=50), nullable=True),
        sa.Column("date", sa.String(length=50), nullable=True),
        sa.Column("marked_for_deletion", sa.Boolean(), nullable=True),
        sa.Column("id", sa.Integer(), nullable=False),
        sa.PrimaryKeyConstraint("id", name=op.f("pk_metizs")),
        sa.UniqueConstraint(
            "number_in_catalog", name=op.f("uq_metizs_number_in_catalog")
        ),
        sa.UniqueConstraint(
            "number_in_catalog_agb",
            name=op.f("uq_metizs_number_in_catalog_agb"),
        ),
    )
    op.create_table(
        "projects",
        sa.Column("classifier", sa.String(length=50), nullable=False),
        sa.Column("project", sa.String(length=50), nullable=False),
        sa.Column("is_active", sa.Boolean(), nullable=True),
        sa.Column("id", sa.Integer(), nullable=False),
        sa.PrimaryKeyConstraint("id", name=op.f("pk_projects")),
        sa.UniqueConstraint("classifier", name=op.f("uq_projects_classifier")),
        sa.UniqueConstraint("project", name=op.f("uq_projects_project")),
    )
    op.create_table(
        "purchased_hydroperforators",
        sa.Column("number_in_catalog", sa.String(length=50), nullable=True),
        sa.Column(
            "number_in_catalog_agb", sa.String(length=50), nullable=True
        ),
        sa.Column("name_in_catalog", sa.String(length=50), nullable=True),
        sa.Column("name_in_KD", sa.String(length=50), nullable=True),
        sa.Column("name_in_catalog_agb", sa.String(length=50), nullable=True),
        sa.Column("name_in_OEM", sa.String(length=50), nullable=True),
        sa.Column("assigned", sa.String(length=50), nullable=False),
        sa.Column("applicability", sa.String(length=50), nullable=True),
        sa.Column("note", sa.String(length=50), nullable=True),
        sa.Column("marked_for_deletion", sa.Boolean(), nullable=True),
        sa.Column("id", sa.Integer(), nullable=False),
        sa.PrimaryKeyConstraint(
            "id", name=op.f("pk_purchased_hydroperforators")
        ),
        sa.UniqueConstraint(
            "number_in_catalog",
            name=op.f("uq_purchased_hydroperforators_number_in_catalog"),
        ),
        sa.UniqueConstraint(
            "number_in_catalog_agb",
            name=op.f("uq_purchased_hydroperforators_number_in_catalog_agb"),
        ),
    )
    op.create_table(
        "purchaseds",
        sa.Column("number_in_catalog", sa.String(length=50), nullable=True),
        sa.Column(
            "number_in_catalog_agb", sa.String(length=50), nullable=True
        ),
        sa.Column("name_in_catalog", sa.String(length=50), nullable=True),
        sa.Column("name_in_catalog_agb", sa.String(length=50), nullable=True),
        sa.Column("assigned", sa.String(length=50), nullable=False),
        sa.Column("name_in_KD", sa.String(length=50), nullable=True),
        sa.Column("name_in_OEM", sa.String(length=50), nullable=True),
        sa.Column("note", sa.String(length=50), nullable=True),
        sa.Column("date", sa.String(length=50), nullable=True),
        sa.Column("applicability", sa.String(length=50), nullable=True),
        sa.Column("marked_for_deletion", sa.Boolean(), nullable=True),
        sa.Column("id", sa.Integer(), nullable=False),
        sa.PrimaryKeyConstraint("id", name=op.f("pk_purchaseds")),
        sa.UniqueConstraint(
            "number_in_catalog", name=op.f("uq_purchaseds_number_in_catalog")
        ),
        sa.UniqueConstraint(
            "number_in_catalog_agb",
            name=op.f("uq_purchaseds_number_in_catalog_agb"),
        ),
    )
    op.create_table(
        "rwds",
        sa.Column("number", sa.String(length=50), nullable=True),
        sa.Column("date", sa.String(length=50), nullable=True),
        sa.Column("article_number_agb", sa.String(length=50), nullable=True),
        sa.Column("nomenclature", sa.String(length=50), nullable=True),
        sa.Column("note", sa.String(length=50), nullable=True),
        sa.Column("marked_for_deletion", sa.Boolean(), nullable=True),
        sa.Column("id", sa.Integer(), nullable=False),
        sa.PrimaryKeyConstraint("id", name=op.f("pk_rwds")),
        sa.UniqueConstraint("nomenclature", name=op.f("uq_rwds_nomenclature")),
        sa.UniqueConstraint("number", name=op.f("uq_rwds_number")),
    )
    op.create_table(
        "users",
        sa.Column("username", sa.String(length=50), nullable=False),
        sa.Column("password", sa.String(length=50), nullable=False),
        sa.Column("role", sa.String(length=50), nullable=False),
        sa.Column("is_active", sa.Boolean(), nullable=True),
        sa.Column("super_user", sa.Boolean(), nullable=True),
        sa.Column("id", sa.Integer(), nullable=False),
        sa.PrimaryKeyConstraint("id", name=op.f("pk_users")),
        sa.UniqueConstraint("username", name=op.f("uq_users_username")),
    )
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table("users")
    op.drop_table("rwds")
    op.drop_table("purchaseds")
    op.drop_table("purchased_hydroperforators")
    op.drop_table("projects")
    op.drop_table("metizs")
    op.drop_table("adapters_and_plugss")
    op.drop_table("according_to_the_drawings")
    # ### end Alembic commands ###
